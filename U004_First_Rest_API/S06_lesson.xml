<?xml version='1.0' encoding='UTF-8'?>
<slide xmlns="https://ulearn.me/schema/v2" title="GET" id="38995536-4359-4b0f-9177-4bc3aad48864">
    <markdown>
        # GET
        Одна из самых часто используемых операций из списка HTTP-команд – это, конечно, GET.
        ## Коротко об аннотации @RestController
        Если сильно не углубляться, то можно сказать, что фреймворк Spring MVC («модель — представление — контроллер», «Model – View – Controller»)
        был создан с целью делегирования ответственности относительно данных, их визуализации
        (предполагается, что ни будут визуализированы в виде веб-страницы) и взаимодействия с ними. Для связи всего служит аннотация @Controller.

        @Controller — это псевдоним для аннотации @Component, он означает, что мы образуем компонент Spring при запуске приложения из этого класса.
        Компонент, создаваемый и управляемый контейнером инверсии управления (Inversion Of Control, IoC) в приложении.
        Классы, имеющие @Controller, включают объект Model для передачи слою представления данных, соответствующих модели,
        и отображения (совместно с ViewResolver) приложением конкретного представления с помощью специальной технологии.

        Также можно указать классу с аннотацией @Controller, возвращать ответ в формате нотации объектов JavaScript (JSON) или в любом другом ориентированном на данные формате,
        например XML, посредством добавления к классу или методу аннотации @ResponseBody.
        Благодаря такому решению в возвращаемый результат входит все тело ответа на веб-запрос, а не часть Model.

        Существует аннотация @RestController сочетающая в себе аннотации @Controller и @ResponseBody.
        Таким образом это упрощает код и выражает мысли разработчика более прозрачно. Добавляем аннотацию и приступаем к созданию REST API.
    </markdown>
</slide>