<?xml version='1.0' encoding='UTF-8'?>
<slide xmlns="https://ulearn.me/schema/v2" title="Создание простого класса предметной области" id="75bbf63a-6613-43e4-ac14-42bc04f3f432">
    <markdown>
        # Создание простого класса предметной области
        Для ресурсов нужно писать соответствующий код. И начнем мы с создания класса предметной области для нашего ресурса.

        Многие из нашей команды – любители выпить кофе.
        Поэтому в качестве предметной области для нашего примера возьмем кофе и создам класс, представляющий его конкретный вид.

        Начнем с создания класса Coffee. Это обязательный шаг, ведь для демонстрации работы нам нужен ресурс.
        Простота или сложность нашего ресурса на данный момент роли не играет, веди итоговой целью является показать вам работу
        с  REST API, так что можно взять попроще, чтобы сосредоточиться на этой конечной цели.

        Как показано на Рис. 3, класс Coffee имеет две переменные-члена:
        + поле id, однозначно идентифицирующее конкретный вид кофе;
        + поле name с названием кофе.
        ![](U004_First_Rest_API/pictures/pic_3.png "Рис. 3")
        Переменная id была объявлена как final, это нужно чтобы ему можно было присвоить значение только один раз и нельзя было модифицировать в дальнейшем,
        те мы сделали константу, поэтому значение ему необходимо присваивать при создании экземпляра класса Coffee и метода-модификатора у него нет.

        Мы создали два конструктора: один принимает оба параметра, другой предоставляет уникальный идентификатор, если он не указан при создании экземпляра Coffee.

        Далее создаем два метода: метод доступа(accessor)  и метод изменения(mutator) – также их называют методами -сеттер(setter) и -геттер(getter).
        Их мы создали для взаимодействия с полем name, которое не объявлено final, а значит является изменяемым.
        Конечно, это спорное архитектурное решение, но для этого примера оно хорошо подходит.

        Теперь переходим к самому REST…
    </markdown>
</slide>