<?xml version='1.0' encoding='UTF-8'?>
<slide xmlns="https://ulearn.me/schema/v2" title="Описание сущностей" id="591c0872-cb01-4142-b703-ecf9dba99c72">
    <markdown>
        Практически во всех случаях, когда мы имеем дело с данными, применяется какая-либо сущность предметной области – совокупность данных, которые имеют общие свойства — редко используют неотфильтрованные данные. Полезными данными мы называем совокупность элементов, которая представляет собой что-то осмысленное.

        Spring Data предоставляет несколько различных возможностей доступа к данным для приложений Spring Boot на самых разных уровнях абстракции. Первый шаг — описание классов предметной области, которые будут использоваться для обработки соответствующих данных, и не важно какой уровень абстракции они имеют.

        Воспользуемся некоторыми идеями предметно-ориентированного проектирования (Domain-Driven Design, DDD) в качестве основы для описания нужных классов предметной области в примерах приложений в этой и следующих главах.

        Говоря общими словами, класс предметной области (domain class) инкапсулирует основную сущность предметной области, обладающую значимостью независимо от других данных. Это не означает, что она не связана с другими сущностями предметной области, а говорит лишь о том, что она самодостаточна и имеет смысл как отдельная единица даже без привязки к другим сущностям.

        Для создания класса предметной области в Spring с помощью Java можно создать класс с переменными-членами, соответствующими конструкторами, методами доступа и измененияи многими другими. Можно также воспользоваться Lombok, чтобы создавать классы предметной области для представления, хранения и извлечения данных. Все вышеупомянутое будет продемонстрированно в этой главе. Мы покажем, насколько просто работать с предметной областью с помощью Spring Boot и Spring Data.

        Выберем базу данных и уровень абстракции в соответствии с целями использования данных и предоставляемых API для базы данных. Обычно выбирают один из двух вариантов: шаблоны или репозитории.
    </markdown>
</slide>