<?xml version='1.0' encoding='UTF-8'?>
<slide xmlns="https://ulearn.me/schema/v2" title="Поддержка шаблонов и репозиториев" id="53b6d7ab-a177-4cf2-abf2-3463023f9b44">
    <markdown>
        #### Поддержка шаблонов

        Для предоставления набора связных абстракций довольно высокого уровня Spring Data приходится описывать интерфейсы типа Operations для большинства различных источников данных. Эти интерфейсы, например MongoOperations, RedisOperations и CassandraOperations, в совокупности дают базовый набор операций, которые можно применять напрямую для достижения максимальной гибкости или создавать на их основе абстракции более высокого уровня. Классы Template обеспечивают прямые реализации интерфейсов Operations.

        Про шаблоны можно сказать, что они своего рода являются интерфейсами поставщиков сервисов (Service Provider Interface, SPI). Они обладают большими возможностями и допускают непосредственное использование, но каждый раз разработчикам в обязательном порядке нужно повторить множество шагов для реализации разных распространенных сценариев использования. Для ситуаций, когда доступ к данным имеет типичные закономерности, с большей степенью вероятности подойдут именно репозитории. Интересный момент заключается в том, что в основе репозиториев лежат шаблоны, поэтому вы ничего не потеряете от перехода к абстракции более высокого уровня.

        #### Поддержка репозиториев

        В Spring Data определен интерфейс Repository, базовый для всех остальных типов интерфейсов репозиториев Spring Data, например JPARepository и MongoRepository, предоставляющих ориентированные на JPA и Mongo возможности, и различные многофункциональные интерфейсы наподобие CrudRepository, ReactiveCrudRepository и PagingAndSortingRepository. В них прописано  множество полезных высокоуровневых операций, например findAll(), findById(), count(), delete(), deleteAll() и др.

        Репозитории определены как для блокирующих, так и для неблокирующих взаимодействий. Кроме того, репозитории Spring Data поддерживают создание запросов в стиле «соглашения важнее конфигурации» и даже точных операторов запросов. Использование репозиториев Spring Data со Spring Boot упрощает реализацию сложных взаимодействий с базами данных практически до уровня тривиальной задачи.

        Все эти возможности будут продемонстрированы далее. В этой главе будут охвачены ключевые элементы нескольких вариантов баз данных путем комбинирования различных деталей реализации: Lombok, Kotlin и др.
    </markdown>
</slide>